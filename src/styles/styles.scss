// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$gainsboro-palette: (
  50: #f9f9fa,
  100: #f3f3f4,
  200: #ebebec,
  300: #dcdcdd,
  400: #b9b9ba,
  500: #99999a,
  600: #707071,
  700: #5d5d5e,
  800: #3e3e3f,
  900: #1d1d1e,
  A100: #f5f5f5,
  A200: #eaeaeb,
  A400: #d6d6d7,
  A700: #838386,
  contrast: (50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: rgba(black, 0.87),
    A400: rgba(black, 0.87),
    A700: white,
  )
);

$crimson-palette: (
  50: #feebf0,
  100: #fdcdd7,
  200: #ee9aa2,
  300: #e4737e,
  400: #f05060,
  500: #f73c49,
  600: #e73347,
  700: #d52940,
  800: #c82239,
  900: #b9142d,
  contrast: (50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);


$TinyTask_App-primary: mat.define-palette(mat.$bright-navy-blue-palette, 50, 300, 900);
$TinyTask_App-accent: mat.define-palette($gainsboro-palette, 300, 100, 500);

// The warn palette is optional (defaults to red).
$TinyTask_App-warn: mat.define-palette($crimson-palette, 900);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$TinyTask_App-theme: mat.define-light-theme((color: (primary: $TinyTask_App-primary,
        accent: $TinyTask_App-accent,
        warn: $TinyTask_App-warn,
      ),
      typography: mat.define-typography-config(),
      density: 0));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($TinyTask_App-theme);

/* You can add global styles to this file, and also import other style files */
@import 'variables';
@import 'mixins';
@import 'functions';
@import 'typography';
@import 'base';
@import 'layout';
@import 'utilities';

* {
  margin: 0;
  padding: 0;
  border: 0;
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: $primaryFont;
}